#!/usr/bin/php -q
<?php

$base = getenv("TOP");
if ($base) {
	require "$base/phplib/prepend.php";
	require "$base/inc/config.php";
	require "$base/inc/clilib.inc";
}
else {
	require "../../phplib/prepend.php";
	require "../../inc/config.php";
	require "../../inc/clilib.inc";
};

function usage()
{
	print "
Usage: mknamed.conf bindserver named_conf_file
You called: mknamed.conf $argv[1] $argv[2]

";
	exit(1);
}

function zone_def($domain, $masterip, $zonefile, $master, $masters , $options)
{
	global $SLAVEIPS;
	global $SLAVE_ON_SLAVES;
	$options = str_replace("\$ACL", ($SLAVEIPS? $SLAVEIPS : "none").";", $options);
	if ($master && $masterip || ($SLAVE_ON_SLAVES && !$master && $masterip)) {
		# Slave zone on the master server
		return "zone \"$domain\" {\n\ttype slave;\n\tmasters {\n\t\t$masterip;\n\t};\n\tfile \"$zonefile\";\n".($options? "\t$options\n" : "") ."}; \n\n";
	} elseif ($master) {
		# Master zone on the master server
		return "zone \"$domain\" {\n\ttype master;\n\tfile \"$zonefile\";\n".($options? "\t$options\n" : "") ."};\n\n";
	} elseif (!$master && $masterip) {
		return "";
	} else {
		# Master zone on the secondary server - prefix SEC will be added automatically
		return "zone \"$domain\" {\n\ttype slave;\n\tmasters {\n\t\t$masters;\n\t};\n\tfile \"SEC/$zonefile\";\n".($options? "\t$options\n" : "") ."}; \n\n";
	}
}

function zone_defs($master, $masters)
{
	$result = '';
	$query = "SELECT domain, master, zonefile, options FROM zones WHERE domain != 'TEMPLATE' AND NOT disabled";
	$rid = sql_query($query);
	while(list($domain, $masterip, $zonefile, $options) = mysql_fetch_row($rid)) {
		$result .= zone_def($domain, $masterip, $zonefile, $master, $masters, $options);
	}
	return $result;
}

#
# MAIN
#
# Parse command line & set up parameters
#
$argv[1] || usage();
$server = $argv[1];

chdir("$HOST_DIR/$server") || abort("Can not chdir to $HOST_DIR/$server");

($file = $argv[2]) || usage();

($cf = fopen("$file", "w")) || abort("Can not create '$file'\n");

$query = "SELECT type, zonedir, template, options FROM servers WHERE hostname = '$argv[1]'";
$rid = sql_query($query);
$row = mysql_fetch_array($rid);
mysql_free_result($rid);

# Initialize $SLAVES
$query = "SELECT ipno FROM servers WHERE type = 'S'";
$rid = sql_query($query);
if (mysql_num_rows($rid) > 0) {
	while ($slave = mysql_fetch_row($rid))
		$SLAVES[] = $slave[0];
	$SLAVEIPS = join("; ", $SLAVES);
} else {
	$SLAVEIPS = 0;
}
mysql_free_result($rid);

$zone_dir = $row['zonedir'];
$master = ($row['type'] == 'M');
$options = $row['options'];
if ($options)
	$options = str_replace("\n", "\n\t", $options);

$templ_file = "named.tmpl";

if (!is_file($templ_file))
    passthru("cp -r $TEMPL_DIR/".$row['template']."/. .");

is_file($templ_file) || abort("Template file 'named.tmpl' does not exist in $HOST_DIR/$server and can not be copyed from templates");

$template   = join("", file($templ_file));

if (!$master) {
	$query = "SELECT hostname, ipno FROM servers WHERE type = 'M'";
	$rid = sql_query($query);
	while ($row = mysql_fetch_array($rid)) {
		$masters[] = $row['ipno'];
	}
	mysql_free_result($rid);
}
if(!empty($masters))
{
	if (is_array($masters))
		$MASTERS = join(";\n\t\t", $masters);
	else
		$MASTERS = $masters;
}
else
{
	$MASTERS = '';
}

$date = date("d-M-Y H:i");
$result = "# Generated for $argv[1] on $date\n#\n";

$zone_defs = zone_defs($master, $MASTERS);
$patterns = array('/\$ZONE_DIR/', '/\$ZONE_DEFINITIONS/', '/\$TEMPLATE_FILE/', '/\$OPTIONS/', '/\$ACL/');
$replacements = array($zone_dir, $zone_defs, $templ_file , $options, ($SLAVEIPS? "$SLAVEIPS;" : "none;") );
$result .= preg_replace($patterns, $replacements, $template);
fputs  ($cf, $result);
fputs  ($cf, "\n##EOF\n"); // final mark
fclose($cf) || abort("Error writing named.conf file\n");

exit();

?>
